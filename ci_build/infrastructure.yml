---
AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  GithubOauthToken:
    Type: String
Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      AccessControl: BucketOwnerFullControl
  BuildAndDeployFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Policies:
        - PolicyName: CodepipelineStatus
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codepipeline:GetJobDetails
                  - codepipeline:PutJobSuccessResult
                  - codepipeline:PutJobFailureResult
                Resource: "*"
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: react-boilerplate-ci
      RoleArn:
        Fn::GetAtt:
          - PipelineRole
          - Arn
      ArtifactStore:
        Location:
          Ref:
            ArtifactStoreBucket
        Type: S3
      Stages:
        - Name: source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: s0enke
                Repo: react-boilerplate
                Branch: master
                OAuthToken:
                  Ref: GithubOauthToken
              RunOrder: 1
        - Name: build_and_deploy
          Actions:
            - InputArtifacts:
                - Name: SourceOutput
              Name: Lambda
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Version: 1
                Provider: Lambda
              OutputArtifacts: []
              Configuration:
                FunctionName:
                  Ref: BuildAndDeployFunction
              RunOrder: 2
  BuildAndDeployFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          var child_process = require('child_process');
          var fs = require('fs');
          var AWS = require('aws-sdk');
          var util = require('util');

          exports.handler = function(event, context) {
            console.log(util.inspect(event, {depth: null}));
            process.env.HOME = '/tmp';
            console.log(child_process.execSync('rm -fr /tmp/lambda_function /tmp/.npm /tmp/bin', {encoding: 'utf-8'}));
            fs.mkdirSync('/tmp/lambda_function');
            process.chdir('/tmp/lambda_function');


            // install newer version of node
            console.log(child_process.execSync('node /usr/local/lib64/node-v4.3.x/lib/node_modules/npm/bin/npm-cli.js install npm npmlog --prefix=/tmp --progress=false', {encoding: 'utf-8'}));

            console.log(child_process.execSync('find /tmp/ -name npm -type f', {encoding: 'utf-8'}));
            fs.mkdirSync('/tmp/bin');
            fs.symlinkSync('/tmp/node_modules/npm/bin/npm-cli.js', '/tmp/bin/npm');
            process.env.PATH = '/tmp/bin:' + process.env.PATH;


            console.log(child_process.execSync('npm --version', {encoding: 'utf-8'}));
            //return;

            var params = {Bucket: 'react-boilerplate-ci-infrastr-artifactstorebucket-jqwb4004sajz', Key: 'react-boilerplate-ci/myapp/RpxBfog.zip'};
            var file = fs.createWriteStream("/tmp/lambda_function/artifact.zip");
            var s3 = new AWS.S3({"signatureVersion":"v4"});
            s3.getObject(params).createReadStream().pipe(file);
            file.on('close', function(){
              console.log(child_process.execSync('unzip artifact.zip', {encoding: 'utf-8'}));
              console.log(child_process.execSync('npm install', {encoding: 'utf-8'}));
              console.log(child_process.execSync('npm run build', {encoding: 'utf-8'}));
              console.log(child_process.execSync('ls -al build', {encoding: 'utf-8'}));
            });
          };
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - BuildAndDeployFunctionRole
          - Arn
      Runtime: nodejs4.3
      Timeout: 300
      MemorySize: 1536
